import os
import sys
import math
import pandas as pd
from snakemake.utils import min_version


min_version("6.0")


SDIR = os.path.realpath(os.path.dirname(srcdir("Snakefile")))
shell.prefix(
    f"set -eo pipefail; export PATH={SDIR}/../Clair3:$PATH; "
)


report: "report/workflow.rst"


configfile: "config/config.yaml"


MANIFEST = config.get('MANIFEST', 'config/manifest.tab')
BASECALL_VERSION = config.get('BASECALLER', 'guppy5012')
REF = config.get('REF')
NBATCHES = config.get('BATCHES', 100)


manifest_df = pd.read_csv(MANIFEST, sep='\t', index_col='SAMPLE')


TEMP_DIR = config.pop("tempdir", "temp")
if TEMP_DIR != "temp":
    if os.path.exists("temp"):
        if os.path.islink("temp") and os.path.realpath("temp") == os.path.realpath(
            TEMP_DIR
        ):
            print("The temp dir has already been linked.")
        else:
            sys.exit("temp/ already in use, please move it before running.")
    else:
        shell("ln -s {TEMP_DIR} temp")


localrules: all

wildcard_constraints:
    sample='|'.join(manifest_df.index),
    var_caller='|'.join(['sniffles', 'svim', 'cuteSV', 'clair3']),
    seq='wgs|tlrs'


scattergather:
    split=NBATCHES


include: 'rules/common.smk'

rule all:
    input:
        expand('alignments/{sample}/{sample}.{bc_vers}.minimap2.{seq}.{var_caller}.vcf.gz', sample=manifest_df.index, bc_vers=BASECALL_VERSION, seq='wgs', var_caller=['sniffles', 'svim', 'cuteSV', 'clair3']),

include: 'rules/alignment.smk'
include: 'rules/variant_calling.smk'
