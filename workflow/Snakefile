import os
import sys
import math
import pandas as pd
from snakemake.utils import min_version


min_version("6.0")


SDIR = os.path.realpath(os.path.dirname(srcdir("Snakefile")))
shell.prefix(f"set -eo pipefail; export PATH=$PATH:{SDIR}/../Clair3; ")


report: "report/workflow.rst"


configfile: "config/config.yaml"


MANIFEST = config.get("MANIFEST", "config/manifest.tab")
REF = config.get("REF")
NBATCHES = config.get("BATCHES", 25)


manifest_df = pd.read_csv(MANIFEST, sep="\t", index_col="SAMPLE", dtype=str)


TEMP_DIR = config.pop("tempdir", "temp")
if TEMP_DIR != "temp":
    if os.path.exists("temp"):
        if os.path.islink("temp") and os.path.realpath("temp") == os.path.realpath(
            TEMP_DIR
        ):
            print("The temp dir has already been linked.")
        else:
            sys.exit("temp/ already in use, please move it before running.")
    else:
        shell("ln -s {TEMP_DIR} temp")


localrules:
    all,
    all_sv,
    all_align,
    all_minimap_methyl,
    all_haplotag_methyl,


wildcard_constraints:
    sample="|".join(manifest_df.index),
    var_caller="|".join(["sniffles", "svim", "cuteSV", "clair3"]),


scattergather:
    split=NBATCHES,


include: "rules/common.smk"


rule all:
    input:
        expand(
            "variants/{sample}/{sample}.{var_caller}.vcf.gz",
            sample=manifest_df.index,
            var_caller=["sniffles", "svim", "cuteSV", "clair3"],
        ),
        expand(
            "methyl_aln/{sample}/{sample}.{phase}.methyl.bam",
            sample=manifest_df.index,
            phase="longphase",
        ),


rule all_align:
    input:
        expand(
            "alignments/{sample}/{sample}.minimap2.bam",
            sample=manifest_df.index,
        ),
        expand(
            "alignments/{sample}/{sample}.minimap2.bam.bai",
            sample=manifest_df.index,
        ),


rule all_sv:
    input:
        expand(
            "variants/{sample}/{sample}.{var_caller}.vcf.gz",
            sample=manifest_df.index,
            var_caller=["sniffles", "svim", "cuteSV"],
        ),


rule all_somatic:
    input:
        expand(
            "variants/{sample}/{sample}.{var_caller}.vcf.gz",
            sample=manifest_df.index,
            var_caller=["sniffles-somatic"],
        ),

rule all_snv:
    input:
        expand(
            "variants/{sample}/{sample}.{var_caller}.vcf.gz",
            sample=manifest_df.index,
            var_caller="clair3",
        ),


rule all_haplotag_methyl:
    input:
        expand(
            "methyl_aln/{sample}/{sample}.{phase}.methyl.bam",
            sample=manifest_df.index,
            phase="longphase",
        ),


rule all_minimap_methyl:
    input:
        expand(
            "methyl_aln/{sample}/{sample}.{phase}.methyl.bam",
            sample=manifest_df.index,
            phase="minimap2",
        ),


rule all_haplotag:
    input:
        expand(
            "phased_aln/{sample}/{sample}.minimap2.longphase.bam",
            sample=manifest_df.index,
        ),


include: "rules/alignment.smk"
include: "rules/somatic_variants.smk"
include: "rules/variant_calling.smk"
include: "rules/phase.smk"
include: "rules/methylink.smk"
